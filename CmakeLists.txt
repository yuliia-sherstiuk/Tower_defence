cmake_minimum_required(VERSION 3.14)
project(Tower)

set(CMAKE_CXX_STANDARD 14)

# Ajoutez le chemin vers les en-têtes SFML
set(SFML_DIR "C:/msys64/mingw64")

# Inclure les répertoires de SFML
find_package(SFML 2.5 COMPONENTS graphics window system REQUIRED)

# Inclure les répertoires
include_directories(Tower_defence/includes)
include_directories(Tower_defence/includes/logic)
include_directories(Tower_defence/includes/logic/models)
include_directories(Tower_defence/includes/logic/controllers)
include_directories(Tower_defence/includes/utils)
include_directories(Tower_defence/includes/graphics/views)

# Définir l'exécutable
add_executable(Tower
        #main
        source/main.cpp

        #Includes views
        includes/graphics/views/WindowView.h

        #Includes controllers
        includes/logic/controllers/GameController.h
        includes/logic/controllers/WaveManager.h
        includes/logic/controllers/SoundController.h

        #Includes models
        includes/logic/models/Economy.h
        includes/logic/models/Enemy.h
        includes/logic/models/Game.h
        includes/logic/models/scoreEntry.h
        includes/logic/models/ScoreManager.h
        includes/logic/models/Tower.h
        includes/logic/models/Wave.h

        #Includes utils
        includes/utils/GridPosition.h
        includes/utils/Level.h
        includes/utils/LevelLoader.h
        includes/utils/PathNode.h includes/utils/Position.h

        #Controllers
        source/logic/controllers/GameController.cpp
        source/logic/controllers/WaveManager.cpp
        source/logic/controllers/SoundController.cpp

        #Models
        source/logic/models/Economy.cpp
        source/logic/models/Enemy.cpp
        source/logic/models/Game.cpp
        source/logic/models/ScoreManager.cpp
        source/logic/models/Tower.cpp
        source/logic/models/Wave.cpp
        source/logic/models/towerVariants.cpp


        #Views
        source/graphics/views/WindowView.cpp
        source/graphics/views/towerView.cpp
        source/main.cpp

)

# Lier les bibliothèques SFML
target_link_libraries(Tower sfml-graphics sfml-window sfml-system sfml-audio)